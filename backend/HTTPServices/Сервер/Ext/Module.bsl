
Функция ВыгрузитьСписокИнициативВыгрузитьСписокИнициатив(Запрос)
	
	Login = Запрос.ПараметрыURL.Получить("Login");
	
	ЗапросПОльзователь = Новый Запрос;
	ЗапросПОльзователь.Текст =   "ВЫБРАТЬ
	                             |	Пользователь.Ссылка КАК Ссылка,
	                             |	ВЫБОР
	                             |		КОГДА Пользователь.ЮрФизЛицо = ЗНАЧЕНИЕ(перечисление.ЮрФизЛицо.ФизЛицо)
	                             |			ТОГДА ""ФизЛицо""
	                             |		ИНАЧЕ ""ЮрЛицо""
	                             |	КОНЕЦ КАК ЮрФизЛицо
	                             |ИЗ
	                             |	Справочник.Пользователь КАК Пользователь
	                             |ГДЕ
	                             |	Пользователь.Логин = &Логин" ;
	ЗапросПОльзователь.УстановитьПараметр("Логин",Строка(Login)); 
	
	//Если ЗапросПОльзователь.Выполнить().Пустой() Тогда 
	//КонецЕсли;
	
	ВЫборка = ЗапросПОльзователь.Выполнить().Выбрать();
	
	ФизЮрЛицо = "";
	Пока ВЫборка.Следующий() Цикл 
		ФизЮрЛицо = ВЫборка.ЮрФизЛицо;
	КонецЦикла;
	
	//ФизЮрЛицо =ФизЮрЛицо 
	//Строка(Запрос.ПараметрыURL.Получить("fizik"));

	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("ФизЮрЛицо", ФизЮрЛицо);
	
	Обработка = Обработки.ВыгрузитьСписокИнициатив.Создать();
	Результат = Обработка.СформироватьСписокИнициатив(ПараметрыПроверки);	

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	//Ответ.УстановитьТелоИзСтроки("<Response><Code>-1</Code><Message>Неизвестный запрос</Message></Response>");
	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);
	
	Возврат Ответ;

КонецФункции

Функция ВыгрузитьИнициативу(Запрос)
	
	Login = Запрос.ПараметрыURL.Получить("Login");
	ЗапросПОльзователь = Новый Запрос;
	ЗапросПОльзователь.Текст =   "ВЫБРАТЬ
	                             |	Пользователь.Ссылка КАК Ссылка,
	                             |	ВЫБОР
	                             |		КОГДА Пользователь.ЮрФизЛицо = ЗНАЧЕНИЕ(перечисление.ЮрФизЛицо.ФизЛицо)
	                             |			ТОГДА ""ФизЛицо""
	                             |		ИНАЧЕ ""ЮрЛицо""
	                             |	КОНЕЦ КАК ЮрФизЛицо
	                             |ИЗ
	                             |	Справочник.Пользователь КАК Пользователь
	                             |ГДЕ
	                             |	Пользователь.Логин = &Логин" ;
	ЗапросПОльзователь.УстановитьПараметр("Логин",Строка(Login)); 
	
	ВЫборка = ЗапросПОльзователь.Выполнить().Выбрать();
	
	ПОльзователь = Справочники.Пользователь.ПустаяСсылка();
	Пока ВЫборка.Следующий() Цикл 
		ПОльзователь = ВЫборка.Ссылка;
	КонецЦикла;

	//ЗаписьЖурналаРегистрации("ПОльзователь",,,ПОльзователь);
	
	
	
	
	Guid = Запрос.ПараметрыURL.Получить("Guid");
	УИД = Новый УникальныйИдентификатор(Guid);
		//ЗаписьЖурналаРегистрации("Guid",,,Guid);

	СсылкаНаИнициативу = Справочники.Инициатива.ПолучитьСсылку(УИД);
		//ЗаписьЖурналаРегистрации("СсылкаНаИнициативу",,,СсылкаНаИнициативу);
	ЗапросИнициатива = Новый Запрос;
	ЗапросИнициатива.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	Инициатива.Ссылка КАК Ссылка,
	                         |	Инициатива.Наименование КАК Наименование,
	                         |	Инициатива.Содержание КАК Содержание,
	                         |	Инициатива.СрокДо КАК СрокДо,
	                         |	Инициатива.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                         |	Инициатива.ДоступностьФизЛицам КАК ДоступностьФизЛицам,
	                         |	Инициатива.ОписаниеHTML КАК ОписаниеHTML
	                         |ПОМЕСТИТЬ ВТ
	                         |ИЗ
	                         |	Справочник.Инициатива КАК Инициатива
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	СУММА(ЕСТЬNULL(РейтингИнициатив.ОценкаЛайк, 0)) КАК ОценкаЛайк,
	                         |	РейтингИнициатив.Инициатива КАК Инициатива
	                         |ПОМЕСТИТЬ ВТ_рейтинг
	                         |ИЗ
	                         |	РегистрСведений.РейтингИнициатив КАК РейтингИнициатив
	                         |
	                         |СГРУППИРОВАТЬ ПО
	                         |	РейтингИнициатив.Инициатива
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	ВТ.Ссылка КАК Ссылка,
	                         |	ВТ.Наименование КАК Наименование,
	                         |	ВТ.Содержание КАК Содержание,
	                         |	ВТ.СрокДо КАК СрокДо,
	                         |	ВТ.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                         |	ВТ.ДоступностьФизЛицам КАК ДоступностьФизЛицам,
	                         |	ЕСТЬNULL(ВТ_рейтинг.ОценкаЛайк, 0) КАК ОценкаЛайк,
	                         |	ВТ.ОписаниеHTML КАК ОписаниеHTML
	                         |ИЗ
	                         |	ВТ КАК ВТ
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_рейтинг КАК ВТ_рейтинг
	                         |		ПО ВТ.Ссылка = ВТ_рейтинг.Инициатива
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопросы КАК ОтветыНаВопросы
	                         |		ПО ВТ.Ссылка = ОтветыНаВопросы.Инициатива
	                         |ГДЕ
	                         |	ВТ.Ссылка = &Ссылка";
	ЗапросИнициатива.УстановитьПараметр("Ссылка",СсылкаНаИнициативу );
	//ЗапросИнициатива.УстановитьПараметр("ПОльзователь",ПОльзователь );
	
	
	Результат = Новый Структура("КодОтвета, Сообщение, СообщениеОбОшибке");
	ИмяФайлаВыгрузки = КаталогВременныхФайлов() + "\123.json";     
	
	РезЗапроса = ЗапросИнициатива.Выполнить();
	
	ВыборкаПоИнициативе = РезЗапроса.Выбрать();
	
	
	Инициатива = Новый Структура;
	
	Пока ВыборкаПоИнициативе.Следующий() Цикл 
		Инициатива.Вставить("Наименование",ВыборкаПоИнициативе.Наименование);
		Инициатива.Вставить("ОценкаЛайк",ВыборкаПоИнициативе.ОценкаЛайк);
		//Инициатива.Вставить("ОценкаДизЛайк",ВыборкаПоИнициативе.ОценкаДизЛайк);
		Инициатива.Вставить("ДоступностьЮрЛицам",ВыборкаПоИнициативе.ДоступностьЮрЛицам);
		Инициатива.Вставить("ДоступностьФизЛицам",ВыборкаПоИнициативе.ДоступностьФизЛицам);
		Инициатива.Вставить("ГУИД",Строка(ВыборкаПоИнициативе.Ссылка.УникальныйИдентификатор()));
		Инициатива.Вставить("Содержание",ВыборкаПоИнициативе.Содержание);
		Инициатива.Вставить("СрокДо",Формат(ВыборкаПоИнициативе.СрокДо,"ДФ=dd.MM.yyyy"));
		Инициатива.Вставить("ОписаниеHTML",Строка(ВыборкаПоИнициативе.ОписаниеHTML));
		МассивФайлов = Новый Массив;
		Для Каждого СтрФайл Из  ВыборкаПоИнициативе.Ссылка.ВложенияФайлы Цикл  
			ДанныеФайла = Новый Структура;
			ДанныеФайла.Вставить("ИмяФайла", СтрФайл.Файл.ИмяФайла);
			ДанныеФайла.Вставить("Файл", Base64Строка(СтрФайл.Файл.Файл.Получить()));
			МассивФайлов.Добавить(ДанныеФайла);
		КонецЦикла;
		
		Инициатива.Вставить("МассивФайлов", МассивФайлов);
		
		Результат.Вставить("КодОтвета", Истина);
		Результат.Вставить("СообщениеОбОшибке", "");
		 ЗаписьЖурналаРегистрации("Guid",,,Guid);

		//Массив.Добавить(Инициатива);

	КонецЦикла;
	
	
	
	
	
	ЗапросОтзывы = Новый Запрос;
	ЗапросОтзывы.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                     |	Инициатива.Ссылка КАК Ссылка,
	                     |	Инициатива.Наименование КАК Наименование,
	                     |	Инициатива.Содержание КАК Содержание,
	                     |	Инициатива.СрокДо КАК СрокДо,
	                     |	Инициатива.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                     |	Инициатива.ДоступностьФизЛицам КАК ДоступностьФизЛицам
	                     |ПОМЕСТИТЬ ВТ
	                     |ИЗ
	                     |	Справочник.Инициатива КАК Инициатива
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ.Ссылка КАК Ссылка,
	                     |	ОтветыНаВопросы.Пользователь КАК Пользователь
	                     |ИЗ
	                     |	ВТ КАК ВТ
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопросы КАК ОтветыНаВопросы
	                     |		ПО ВТ.Ссылка = ОтветыНаВопросы.Инициатива
	                     |ГДЕ
	                     |	ВТ.Ссылка = &Ссылка
	                     |	И ОтветыНаВопросы.Пользователь = &Пользователь";
	ЗапросОтзывы.УстановитьПараметр("Ссылка",СсылкаНаИнициативу );
	ЗапросОтзывы.УстановитьПараметр("ПОльзователь",ПОльзователь );
	
	Если ЗапросОтзывы.Выполнить().Пустой()  Тогда 
		Инициатива.Вставить("ПользовательПрошелОпрос",Ложь);
	Иначе 
		Инициатива.Вставить("ПользовательПрошелОпрос",Истина);
		
	КонецЕсли;
	
	
	ЗапросКоличествоОтзывов = Новый Запрос;
	ЗапросКоличествоОтзывов.Текст = "ВЫБРАТЬ
	                                |	ОтветыНаВопросы.Инициатива КАК Инициатива,
	                                |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтветыНаВопросы.Пользователь) КАК КоличествоОтзывов
	                                |ИЗ
	                                |	РегистрСведений.ОтветыНаВопросы КАК ОтветыНаВопросы
	                                |ГДЕ
	                                |	ОтветыНаВопросы.Инициатива = &Инициатива
	                                |
	                                |СГРУППИРОВАТЬ ПО
	                                |	ОтветыНаВопросы.Инициатива";
	
	ЗапросКоличествоОтзывов.УстановитьПараметр("Инициатива",СсылкаНаИнициативу );
	
	Инициатива.Вставить("КоличествоОтзывов", 0);

	рЗапроса = ЗапросКоличествоОтзывов.Выполнить();
	
	
	Если НЕ ЗапросКоличествоОтзывов.Выполнить().Пустой()  Тогда
		Выборка =  рЗапроса.Выбрать();
		Выборка.Следующий();
		Инициатива.Вставить("КоличествоОтзывов", Выборка.КоличествоОтзывов);	
	КонецЕсли;


	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(); 
	ЗаписьJSON.ОткрытьФайл(ИмяФайлаВыгрузки, , , ПараметрыЗаписи) ; 
	ЗаписатьJSON(ЗаписьJSON, Инициатива); 
	ЗаписьJSON.Закрыть();
	
	ТекстДок = Новый ТекстовыйДокумент();
	ТекстДок.Прочитать(ИмяФайлаВыгрузки,КодировкаТекста.UTF8);
	
	
	Результат.Вставить("Сообщение", ТекстДок.ПолучитьТекст());
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	//Ответ.УстановитьТелоИзСтроки("<Response><Code>-1</Code><Message>Неизвестный запрос</Message></Response>");
	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);

	

	Возврат Ответ;
	//ТекстДок.ПолучитьТекст();

	
КонецФункции

Функция ВыгрузитьОпросы(Запрос)
	Login = Запрос.ПараметрыURL.Получить("Login");
	
	ЗапросПОльзователь = Новый Запрос;
	ЗапросПОльзователь.Текст =   "ВЫБРАТЬ
	|	Пользователь.Ссылка КАК Ссылка,
	                             |	ВЫБОР
	                             |		КОГДА Пользователь.ЮрФизЛицо = ЗНАЧЕНИЕ(перечисление.ЮрФизЛицо.ФизЛицо)
	                             |			ТОГДА ""ФизЛицо""
	                             |		ИНАЧЕ ""ЮрЛицо""
	                             |	КОНЕЦ КАК ЮрФизЛицо
	                             |ИЗ
	                             |	Справочник.Пользователь КАК Пользователь
	                             |ГДЕ
	                             |	Пользователь.Логин = &Логин" ;
	ЗапросПОльзователь.УстановитьПараметр("Логин",Строка(Login)); 
	
	ВЫборка = ЗапросПОльзователь.Выполнить().Выбрать();
	
	ПОльзователь = Справочники.Пользователь.ПустаяСсылка();
	Пока ВЫборка.Следующий() Цикл 
		ПОльзователь = ВЫборка.Ссылка;
	КонецЦикла;

	//ЗаписьЖурналаРегистрации("ПОльзователь",,,ПОльзователь);
	
	
	
	
	Guid = Запрос.ПараметрыURL.Получить("Guid");

	 	УИД = Новый УникальныйИдентификатор(Guid);
		//ЗаписьЖурналаРегистрации("Guid",,,Guid);

	СсылкаНаИнициативу = Справочники.Инициатива.ПолучитьСсылку(УИД);
		//ЗаписьЖурналаРегистрации("СсылкаНаИнициативу",,,СсылкаНаИнициативу);
	ЗапросИнициатива = Новый Запрос;
	ЗапросИнициатива.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	Инициатива.Ссылка КАК Ссылка,
	                         |	Инициатива.Наименование КАК Наименование,
	                         |	Инициатива.Содержание КАК Содержание,
	                         |	Инициатива.СрокДо КАК СрокДо,
	                         |	Инициатива.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                         |	Инициатива.ДоступностьФизЛицам КАК ДоступностьФизЛицам
	                         |ПОМЕСТИТЬ ВТ
	                         |ИЗ
	                         |	Справочник.Инициатива КАК Инициатива
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	СУММА(ЕСТЬNULL(РейтингИнициатив.ОценкаЛайк, 0)) КАК ОценкаЛайк,
							 //|	СУММА(ЕСТЬNULL(РейтингИнициатив.ОценкаДизЛайк, 0)) КАК ОценкаДизЛайк,
	                         |	РейтингИнициатив.Инициатива КАК Инициатива
	                         |ПОМЕСТИТЬ ВТ_рейтинг
	                         |ИЗ
	                         |	РегистрСведений.РейтингИнициатив КАК РейтингИнициатив
	                         |
	                         |СГРУППИРОВАТЬ ПО
	                         |	РейтингИнициатив.Инициатива
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	ВТ.Ссылка КАК Ссылка,
	                         |	ВТ.Наименование КАК Наименование,
	                         |	ВТ.Содержание КАК Содержание,
	                         |	ВТ.СрокДо КАК СрокДо,
	                         |	ВТ.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                         |	ВТ.ДоступностьФизЛицам КАК ДоступностьФизЛицам,
	                         |	ЕСТЬNULL(ВТ_рейтинг.ОценкаЛайк, 0) КАК ОценкаЛайк
							 //|	ЕСТЬNULL(ВТ_рейтинг.ОценкаДизЛайк, 0) КАК ОценкаДизЛайк
	                         |ИЗ
	                         |	ВТ КАК ВТ
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_рейтинг КАК ВТ_рейтинг
	                         |		ПО ВТ.Ссылка = ВТ_рейтинг.Инициатива
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопросы КАК ОтветыНаВопросы
	                         |		ПО ВТ.Ссылка = ОтветыНаВопросы.Инициатива
	                         |ГДЕ
	                         |	ВТ.Ссылка = &Ссылка";
	ЗапросИнициатива.УстановитьПараметр("Ссылка",СсылкаНаИнициативу );
	//ЗапросИнициатива.УстановитьПараметр("ПОльзователь",ПОльзователь );
	
	
	Результат = Новый Структура("КодОтвета, Сообщение, СообщениеОбОшибке");
	ИмяФайлаВыгрузки = КаталогВременныхФайлов() + "\123.json";     
	
	РезЗапроса = ЗапросИнициатива.Выполнить();
	
	ВыборкаПоИнициативе = РезЗапроса.Выбрать();
	
	
	Инициатива = Новый Структура;
	
	Пока ВыборкаПоИнициативе.Следующий() Цикл 
		Инициатива.Вставить("Наименование",ВыборкаПоИнициативе.Наименование);
		Инициатива.Вставить("ОценкаЛайк",ВыборкаПоИнициативе.ОценкаЛайк);
		//Инициатива.Вставить("ОценкаДизЛайк",ВыборкаПоИнициативе.ОценкаДизЛайк);
		Инициатива.Вставить("ДоступностьЮрЛицам",ВыборкаПоИнициативе.ДоступностьЮрЛицам);
		Инициатива.Вставить("ДоступностьФизЛицам",ВыборкаПоИнициативе.ДоступностьФизЛицам);
		Инициатива.Вставить("ГУИД",Строка(ВыборкаПоИнициативе.Ссылка.УникальныйИдентификатор()));
		Инициатива.Вставить("Содержание",ВыборкаПоИнициативе.Содержание);
		Инициатива.Вставить("СрокДо",Формат(ВыборкаПоИнициативе.СрокДо,"ДФ=dd.MM.yyyy"));
		Результат.Вставить("КодОтвета", Истина);
		Результат.Вставить("СообщениеОбОшибке", "");
		 ЗаписьЖурналаРегистрации("Guid",,,Guid);


	КонецЦикла;
	

	
	
	
	
	
	ЗапросОтзывы = Новый Запрос;
	ЗапросОтзывы.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                     |	Инициатива.Ссылка КАК Ссылка,
	                     |	Инициатива.Наименование КАК Наименование,
	                     |	Инициатива.Содержание КАК Содержание,
	                     |	Инициатива.СрокДо КАК СрокДо,
	                     |	Инициатива.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                     |	Инициатива.ДоступностьФизЛицам КАК ДоступностьФизЛицам
	                     |ПОМЕСТИТЬ ВТ
	                     |ИЗ
	                     |	Справочник.Инициатива КАК Инициатива
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ.Ссылка КАК Ссылка,
	                     |	ОпросВопросы.Вопрос КАК Вопрос,
	                     |	ОпросВопросы.Вопрос.ТипВопроса КАК ТипВопроса,
	                     |	ВЫБОР
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.ТекстСтрока)
	                     |			ТОГДА ""ТекстСтрока""
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.ОдинИзСписка)
	                     |			ТОГДА ""ОдинИзСписка""
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.НесколькоИзСписка)
	                     |			ТОГДА ""НесколькоИзСписка""
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.ЗагрузкаФайлов)
	                     |			ТОГДА ""ЗагрузкаФайлов""
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.Шкала)
	                     |			ТОГДА ""Шкала""
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.СеткаМножественныйВыбор)
	                     |			ТОГДА ""СеткаМножественныйВыбор""
	                     |		КОГДА ОпросВопросы.Вопрос.ТипВопроса.Ссылка = ЗНАЧЕНИЕ(перечисление.ТипВопроса.СеткаФлажков)
	                     |			ТОГДА ""СеткаФлажков""
	                     |		ИНАЧЕ """"
	                     |	КОНЕЦ КАК ВопросТипВопроса
	                     |ИЗ
	                     |	ВТ КАК ВТ
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос КАК Опрос
	                     |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.Вопросы КАК ОпросВопросы
	                     |			ПО Опрос.Ссылка = ОпросВопросы.Ссылка
	                     |		ПО ВТ.Ссылка = Опрос.Инициатива
	                     |ГДЕ
	                     |	ВТ.Ссылка = &Ссылка";
	ЗапросОтзывы.УстановитьПараметр("Ссылка",СсылкаНаИнициативу );
	//ЗапросОтзывы.УстановитьПараметр("ПОльзователь",ПОльзователь );
	
	Если НЕ ЗапросОтзывы.Выполнить().Пустой()  Тогда 
		Инициатива.Вставить("ПользовательПрошелОпрос",Ложь);
		
		ВыборкаОтзывы = ЗапросОтзывы.Выполнить().Выбрать();
		МассивВопросов = Новый Массив;
		//МассивОтветов = Новый Массив;
		
		Пока ВыборкаОтзывы.Следующий() Цикл 
			ВопросОтветы = Новый Структура;                                
			//ВопросОтветы.Вставить("Инициатива", Строка(ВыборкаОтзывы.Ссылка.УникальныйИдентификатор()));
			ВопросОтветы.Вставить("ТипВопроса",  СТрока(ВыборкаОтзывы.ВопросТипВопроса));
			ВопросОтветы.Вставить("Вопрос", СТрока(ВыборкаОтзывы.Вопрос));
			ВопросОтветы.Вставить("КодВопроса", СТрока(ВыборкаОтзывы.Вопрос.Код));
			 //ВопросОтветы.Вставить("Ответы",
			//МассивВопросов.Добавить(ВопросОтветы);
			     МассивОтветов = Новый Массив;

			Для Каждого Стр Из ВыборкаОтзывы.Вопрос.Ответы Цикл 
				СтруктураОтветы = Новый Структура;
				СтруктураОтветы.Вставить("КодОтвета", СТрока(Стр.Ответ.Код));
				СтруктураОтветы.Вставить("Ответ", СТрока(Стр.Ответ));
				МассивОтветов.Добавить(СтруктураОтветы);
			КонецЦикла;
			ВопросОтветы.Вставить("МассивОтветов",МассивОтветов);
			МассивВопросов.Добавить(ВопросОтветы);
			
			
		КонецЦикла;
		Инициатива.Вставить("МассивВопросов",МассивВопросов);

		
			
	КонецЕсли;

	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(); 
	ЗаписьJSON.ОткрытьФайл(ИмяФайлаВыгрузки, , , ПараметрыЗаписи) ; 
	ЗаписатьJSON(ЗаписьJSON, Инициатива); 
	ЗаписьJSON.Закрыть();
	
	ТекстДок = Новый ТекстовыйДокумент();
	ТекстДок.Прочитать(ИмяФайлаВыгрузки,КодировкаТекста.UTF8);
	
	
	Результат.Вставить("Сообщение", ТекстДок.ПолучитьТекст());
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	//Ответ.УстановитьТелоИзСтроки("<Response><Code>-1</Code><Message>Неизвестный запрос</Message></Response>");
	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);

	

	Возврат Ответ;
	

	
КонецФункции

Функция ВыгрузитьВыгрузить(Запрос)
	Login = Запрос.ПараметрыURL.Получить("Login");
	ЗапросПОльзователь = Новый Запрос;
	ЗапросПОльзователь.Текст =   "ВЫБРАТЬ
	                             |	Пользователь.Ссылка КАК Ссылка,
	                             |	ВЫБОР
	                             |		КОГДА Пользователь.ЮрФизЛицо = ЗНАЧЕНИЕ(перечисление.ЮрФизЛицо.ФизЛицо)
	                             |			ТОГДА ""ФизЛицо""
	                             |		ИНАЧЕ ""ЮрЛицо""
	                             |	КОНЕЦ КАК ЮрФизЛицо
	                             |ИЗ
	                             |	Справочник.Пользователь КАК Пользователь
	                             |ГДЕ
	                             |	Пользователь.Логин = &Логин" ;
	ЗапросПОльзователь.УстановитьПараметр("Логин",Строка(Login)); 
	
	ВЫборка = ЗапросПОльзователь.Выполнить().Выбрать();
	
	ПОльзователь = Справочники.Пользователь.ПустаяСсылка();
	Пока ВЫборка.Следующий() Цикл 
		ПОльзователь = ВЫборка.Ссылка;
	КонецЦикла;

	//ЗаписьЖурналаРегистрации("ПОльзователь",,,ПОльзователь);
	
	
	
	
	Guid = Запрос.ПараметрыURL.Получить("Guid");
	УИД = Новый УникальныйИдентификатор(Guid);
		//ЗаписьЖурналаРегистрации("Guid",,,Guid);

	СсылкаНаИнициативу = Справочники.Инициатива.ПолучитьСсылку(УИД);
		//ЗаписьЖурналаРегистрации("СсылкаНаИнициативу",,,СсылкаНаИнициативу);
	ЗапросИнициатива = Новый Запрос;
	ЗапросИнициатива.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	Инициатива.Ссылка КАК Ссылка,
	                         |	Инициатива.Наименование КАК Наименование,
	                         |	Инициатива.Содержание КАК Содержание,
	                         |	Инициатива.СрокДо КАК СрокДо,
	                         |	Инициатива.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                         |	Инициатива.ДоступностьФизЛицам КАК ДоступностьФизЛицам
	                         |ПОМЕСТИТЬ ВТ
	                         |ИЗ
	                         |	Справочник.Инициатива КАК Инициатива
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	СУММА(ЕСТЬNULL(РейтингИнициатив.ОценкаЛайк, 0)) КАК ОценкаЛайк,
							 //|	СУММА(ЕСТЬNULL(РейтингИнициатив.ОценкаДизЛайк, 0)) КАК ОценкаДизЛайк,
	                         |	РейтингИнициатив.Инициатива КАК Инициатива
	                         |ПОМЕСТИТЬ ВТ_рейтинг
	                         |ИЗ
	                         |	РегистрСведений.РейтингИнициатив КАК РейтингИнициатив
	                         |
	                         |СГРУППИРОВАТЬ ПО
	                         |	РейтингИнициатив.Инициатива
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	ВТ.Ссылка КАК Ссылка,
	                         |	ВТ.Наименование КАК Наименование,
	                         |	ВТ.Содержание КАК Содержание,
	                         |	ВТ.СрокДо КАК СрокДо,
	                         |	ВТ.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                         |	ВТ.ДоступностьФизЛицам КАК ДоступностьФизЛицам,
	                         |	ЕСТЬNULL(ВТ_рейтинг.ОценкаЛайк, 0) КАК ОценкаЛайк
							 //|	ЕСТЬNULL(ВТ_рейтинг.ОценкаДизЛайк, 0) КАК ОценкаДизЛайк
	                         |ИЗ
	                         |	ВТ КАК ВТ
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_рейтинг КАК ВТ_рейтинг
	                         |		ПО ВТ.Ссылка = ВТ_рейтинг.Инициатива
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопросы КАК ОтветыНаВопросы
	                         |		ПО ВТ.Ссылка = ОтветыНаВопросы.Инициатива
	                         |ГДЕ
	                         |	ВТ.Ссылка = &Ссылка";
	ЗапросИнициатива.УстановитьПараметр("Ссылка",СсылкаНаИнициативу );
	//ЗапросИнициатива.УстановитьПараметр("ПОльзователь",ПОльзователь );
	
	
	Результат = Новый Структура("КодОтвета, Сообщение, СообщениеОбОшибке");
	ИмяФайлаВыгрузки = КаталогВременныхФайлов() + "\123.json";     
	
	РезЗапроса = ЗапросИнициатива.Выполнить();
	
	ВыборкаПоИнициативе = РезЗапроса.Выбрать();
	
	
	Инициатива = Новый Структура;
	
	Пока ВыборкаПоИнициативе.Следующий() Цикл 
		Инициатива.Вставить("Наименование",ВыборкаПоИнициативе.Наименование);
		Инициатива.Вставить("ОценкаЛайк",ВыборкаПоИнициативе.ОценкаЛайк);
		//Инициатива.Вставить("ОценкаДизЛайк",ВыборкаПоИнициативе.ОценкаДизЛайк);
		Инициатива.Вставить("ДоступностьЮрЛицам",ВыборкаПоИнициативе.ДоступностьЮрЛицам);
		Инициатива.Вставить("ДоступностьФизЛицам",ВыборкаПоИнициативе.ДоступностьФизЛицам);
		Инициатива.Вставить("ГУИД",Строка(ВыборкаПоИнициативе.Ссылка.УникальныйИдентификатор()));
		Инициатива.Вставить("Содержание",ВыборкаПоИнициативе.Содержание);
		Инициатива.Вставить("СрокДо",Формат(ВыборкаПоИнициативе.СрокДо,"ДФ=dd.MM.yyyy"));
		Результат.Вставить("КодОтвета", Истина);
		Результат.Вставить("СообщениеОбОшибке", "");
		 ЗаписьЖурналаРегистрации("Guid",,,Guid);

		//Массив.Добавить(Инициатива);

	КонецЦикла;
	
	
	
	
	
	ЗапросОтзывы = Новый Запрос;
	ЗапросОтзывы.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                     |	Инициатива.Ссылка КАК Ссылка,
	                     |	Инициатива.Наименование КАК Наименование,
	                     |	Инициатива.Содержание КАК Содержание,
	                     |	Инициатива.СрокДо КАК СрокДо,
	                     |	Инициатива.ДоступностьЮрЛицам КАК ДоступностьЮрЛицам,
	                     |	Инициатива.ДоступностьФизЛицам КАК ДоступностьФизЛицам
	                     |ПОМЕСТИТЬ ВТ
	                     |ИЗ
	                     |	Справочник.Инициатива КАК Инициатива
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ.Ссылка КАК Ссылка,
	                     |	ОтветыНаВопросы.Пользователь КАК Пользователь,
	                     |	ОтветыНаВопросы.Вопросы КАК Вопросы,
	                     |	ОтветыНаВопросы.Ответ КАК Ответ
	                     |ИЗ
	                     |	ВТ КАК ВТ
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопросы КАК ОтветыНаВопросы
	                     |		ПО ВТ.Ссылка = ОтветыНаВопросы.Инициатива
	                     |ГДЕ
	                     |	ВТ.Ссылка = &Ссылка
	                     |	И ОтветыНаВопросы.Пользователь = &Пользователь";
	ЗапросОтзывы.УстановитьПараметр("Ссылка",СсылкаНаИнициативу );
	ЗапросОтзывы.УстановитьПараметр("ПОльзователь",ПОльзователь );
	
	Если ЗапросОтзывы.Выполнить().Пустой()  Тогда 
		Инициатива.Вставить("ПользовательПрошелОпрос",Ложь);
	Иначе 
		Инициатива.Вставить("ПользовательПрошелОпрос",Истина);
		
	КонецЕсли;

	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(); 
	ЗаписьJSON.ОткрытьФайл(ИмяФайлаВыгрузки, , , ПараметрыЗаписи) ; 
	ЗаписатьJSON(ЗаписьJSON, Инициатива); 
	ЗаписьJSON.Закрыть();
	
	ТекстДок = Новый ТекстовыйДокумент();
	ТекстДок.Прочитать(ИмяФайлаВыгрузки,КодировкаТекста.UTF8);
	
	
	Результат.Вставить("Сообщение", ТекстДок.ПолучитьТекст());
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	//Ответ.УстановитьТелоИзСтроки("<Response><Code>-1</Code><Message>Неизвестный запрос</Message></Response>");
	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);

	

	Возврат Ответ;
	//ТекстДок.ПолучитьТекст();
КонецФункции

Функция ПолучитьОценкуИнициативыПолучитьОценкуИнициативы(Запрос)

	Login = Запрос.ПараметрыURL.Получить("Login");
	
	ЗапросПОльзователь = Новый Запрос;
	ЗапросПОльзователь.Текст =   "ВЫБРАТЬ
	|	Пользователь.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Пользователь.ЮрФизЛицо = ЗНАЧЕНИЕ(перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ""ФизЛицо""
	|		ИНАЧЕ ""ЮрЛицо""
	|	КОНЕЦ КАК ЮрФизЛицо
	|ИЗ
	|	Справочник.Пользователь КАК Пользователь
	|ГДЕ
	|	Пользователь.Логин = &Логин" ;
	ЗапросПОльзователь.УстановитьПараметр("Логин",Строка(Login)); 
	
	ВЫборка = ЗапросПОльзователь.Выполнить().Выбрать();
	
	ПОльзователь = Справочники.Пользователь.ПустаяСсылка();
	Пока ВЫборка.Следующий() Цикл 
		ПОльзователь = ВЫборка.Ссылка;
	КонецЦикла;
	
	Guid = Запрос.ПараметрыURL.Получить("Guid");
	УИД = Новый УникальныйИдентификатор(Guid);
	
	Инициатива = Справочники.Инициатива.ПолучитьСсылку(УИД);
	
	ЗапросПроверка = Новый Запрос;
	ЗапросПроверка.Текст = "ВЫБРАТЬ
	                       |	РейтингИнициатив.Инициатива КАК Инициатива,
	                       |	РейтингИнициатив.Пользователь КАК Пользователь,
	                       |	РейтингИнициатив.ОценкаЛайк КАК ОценкаЛайк
	                       |ИЗ
	                       |	РегистрСведений.РейтингИнициатив КАК РейтингИнициатив
	                       |ГДЕ
	                       |	РейтингИнициатив.Инициатива = &Инициатива
	                       |	И РейтингИнициатив.Пользователь = &Пользователь
	                       |	И РейтингИнициатив.ОценкаЛайк = &ОценкаЛайк";
	
	ЗапросПроверка.УстановитьПараметр("Инициатива", Инициатива);
	ЗапросПроверка.УстановитьПараметр("Пользователь", Пользователь);
	ЗапросПроверка.УстановитьПараметр("ОценкаЛайк", 1);
	РезультатПроверка = ЗапросПроверка.Выполнить();

	
	Лайк = Запрос.ПараметрыURL.Получить("Like");
	//Дизлайк = Запрос.ПараметрыURL.Получить("Dislike");
	НаборЗаписей = РегистрыСведений.РейтингИнициатив.СоздатьМенеджерЗаписи();
	НаборЗаписей.Инициатива = Инициатива;
	НаборЗаписей.Пользователь = Пользователь;
	Если РезультатПроверка.Пустой() Тогда
		НаборЗаписей.ОценкаЛайк = 1;
	Иначе
		НаборЗаписей.ОценкаЛайк = 0;		
	КонецЕсли;

	
	//НаборЗаписей.ОценкаДизЛайк = Дизлайк;
	
	НаборЗаписей.Записать();
	
	НаборЗаписейРейтингПользователей = РегистрыСведений.РейтингПользователей.СоздатьМенеджерЗаписи();
	НаборЗаписейРейтингПользователей.Пользователь = Пользователь;
	
	НаборЗаписейРейтингПользователей.Рейтинг = 1;
	
	НаборЗаписейРейтингПользователей.Записать();
	
	Результат = Новый Структура;
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	Результат.Вставить("Сообщение",  "ОК");
	
	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);
	
	
	
	Возврат Ответ;
	
	
	
	
КонецФункции

Функция ПолучитьРейтингПользователяПолучитьРейтингПользователя(Запрос)
	Login = Запрос.ПараметрыURL.Получить("Login");

	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ЕСТЬNULL(РейтингПользователей.Рейтинг, 0)) КАК Рейтинг,
	               |	Пользователи.Ссылка КАК Пользователь,
	               |	Пользователи.Наименование КАК Наименование,
	               |	Пользователи.ЮрФизЛицо КАК ЮрФизЛицо,
	               |	Пользователи.МобильныйТелефон КАК МобильныйТелефон,
	               |	Пользователи.Логин КАК Логин,
	               |	Пользователи.Пароль КАК Пароль
	               |ИЗ
	               |	Справочник.Пользователь КАК Пользователи
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РейтингПользователей КАК РейтингПользователей
	               |		ПО (РейтингПользователей.Пользователь = Пользователи.Ссылка)
	               |ГДЕ
	               |	Пользователи.Логин = &Логин
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Пользователи.Ссылка";
	Запрос.УстановитьПараметр("Логин", Login);
	
	РейтингПользователя = Новый Структура;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		РейтингПользователя.Вставить("Рейтинг", Выборка.Рейтинг);
		РейтингПользователя.Вставить("Наименование", Выборка.Наименование);
		РейтингПользователя.Вставить("МобильныйТелефон", Выборка.МобильныйТелефон);
		РейтингПользователя.Вставить("Логин", Выборка.Логин);
		РейтингПользователя.Вставить("Пароль", Выборка.Пароль);
		Если Выборка.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			РейтингПользователя.Вставить("ФизЛицо", Истина);
		ИначеЕсли Выборка.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			РейтингПользователя.Вставить("ФизЛицо", Ложь);
		КонецЕсли;
	КонецЦикла;
	
	ИмяФайлаВыгрузки = КаталогВременныхФайлов() + "\123.json";
	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(); 
	ЗаписьJSON.ОткрытьФайл(ИмяФайлаВыгрузки, , , ПараметрыЗаписи) ; 
	ЗаписатьJSON(ЗаписьJSON, РейтингПользователя); 
	ЗаписьJSON.Закрыть();
	
	ТекстДок = Новый ТекстовыйДокумент();
	ТекстДок.Прочитать(ИмяФайлаВыгрузки,КодировкаТекста.UTF8);
	
	Результат = Новый Структура;
	
	Результат.Вставить("Сообщение", ТекстДок.ПолучитьТекст());	
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");

	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);

	
	
	Возврат Ответ;
КонецФункции

Функция ПолучитьРезультатыОпросовПолучитьРезультатыОпросов(Запрос)
	
	Login = Запрос.ПараметрыURL.Получить("Login");
	
	ЗапросПОльзователь = Новый Запрос;
	ЗапросПОльзователь.Текст =   "ВЫБРАТЬ
	|	Пользователь.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Пользователь.ЮрФизЛицо = ЗНАЧЕНИЕ(перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ""ФизЛицо""
	|		ИНАЧЕ ""ЮрЛицо""
	|	КОНЕЦ КАК ЮрФизЛицо
	|ИЗ
	|	Справочник.Пользователь КАК Пользователь
	|ГДЕ
	|	Пользователь.Логин = &Логин" ;
	ЗапросПОльзователь.УстановитьПараметр("Логин",Строка(Login)); 
	
	ВЫборка = ЗапросПОльзователь.Выполнить().Выбрать();
	
	ПОльзователь = Справочники.Пользователь.ПустаяСсылка();
	Пока ВЫборка.Следующий() Цикл 
		ПОльзователь = ВЫборка.Ссылка;
	КонецЦикла;
	
	
	Guid = Запрос.ПараметрыURL.Получить("Guid");
	УИД = Новый УникальныйИдентификатор(Guid);
	
	Инициатива = Справочники.Инициатива.ПолучитьСсылку(УИД);
	
	
	Вопрос = Запрос.ПараметрыURL.Получить("Vopros");
	ВопросСсылка = Справочники.Вопросы.НайтиПоКоду(Вопрос);
	
	Ответ = Запрос.ПараметрыURL.Получить("Otvet");

	Если ВопросСсылка.ТипВопроса = Перечисления.ТипВопроса.ТекстСтрока Тогда 
		ОтветДляЗаписи = Ответ;
	ИначеЕсли    ВопросСсылка.ТипВопроса = Перечисления.ТипВопроса.ОдинИзСписка Тогда 
		ОтветДляЗаписи = Справочники.Ответы.НайтиПоКоду(Ответ);
	КонецЕсли;
	
	
	
	НаборЗаписей = РегистрыСведений.ОтветыНаВопросы.СоздатьМенеджерЗаписи();
	НаборЗаписей.Инициатива = Инициатива;
	НаборЗаписей.Пользователь = Пользователь;
	НаборЗаписей.Вопросы = ВопросСсылка;
	НаборЗаписей.Ответ = ОтветДляЗаписи;
	//НаборЗаписей.ОценкаДизЛайк = Дизлайк;
	
	НаборЗаписей.Записать();
	

	Результат = Новый Структура;
	Результат.Вставить("Сообщение", "ОК");	
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");

	Ответ.УстановитьТелоИзСтроки(Результат.Сообщение);

	
	
	Возврат Ответ;
КонецФункции


